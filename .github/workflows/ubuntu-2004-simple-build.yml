name: CheckBuild

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  ubuntu-2004-build:
    name: Ubuntu 20.04 | Build
    runs-on: ubuntu-latest
    env:
      LIBMDBX_MIRROR_PRIVATE_KEY: ${{ secrets.LIBMDBX_MIRROR_PRIVATE_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 0
      - name: Build
        run: |
          set -e
          echo =====
          mkdir -p $HOME/.ssh
          chmod 700 $HOME/.ssh
          echo "$LIBMDBX_MIRROR_PRIVATE_KEY" > $HOME/.ssh/libmdbx-mirror.key
          chmod 600 $HOME/.ssh/libmdbx-mirror.key
          git rm external/libmdbx
          GIT_SSH_COMMAND="ssh -i $$HOME/.ssh/libmdbx-mirror.key" git submodule add git@github.com:gofractally/libmdbx-mirror.git external/libmdbx/
          git submodule update --init --recursive
          echo =====
          export DOCKER="docker run --rm -v ${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE} -w ${GITHUB_WORKSPACE} --user $(id -u):$(id -g) jamesmart/cpp-dev-env:latest"
          export DOCKER_ROOT="docker run --rm -v ${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE} -w ${GITHUB_WORKSPACE} jamesmart/cpp-dev-env:latest"
          docker pull jamesmart/cpp-dev-env:latest
          echo =====
          ${DOCKER}
          echo =====
          mkdir build
          ${DOCKER} bash -c "cd build && cmake -DCMAKE_BUILD_TYPE=Release .."
          echo =====
          ${DOCKER} bash -c "cd build && make -j $(nproc)"
          echo =====
          ls -la ${GITHUB_WORKSPACE}
          echo =====
